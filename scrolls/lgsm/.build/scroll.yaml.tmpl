name: artifacts.druid.gg/druid-team/scroll-lgsm
desc: {{ .Version }}
version: 0.0.2
app_version: {{ .Version }}
keepAlivePPM: 5
{{- if or .Vars.lua_query_game_name .Vars.main_port_protocol .Vars.rcon_port }}
ports:
{{- if .Vars.lua_query_game_name }}
  - name: query
    protocol: udp
    description: Steam Query Port. Use this to connect via the Steam client.
    start_delay: {{ or .Vars.start_delay 0 }}
    finish_after_command: install
    sleep_handler: packet_handler/query.lua
    vars:
      - name: GameName
        value: "{{ .Vars.lua_query_game_name }}"
      - name: GameSteamFolder
        value: {{ .Vars.lua_query_folder }}
      - name: GameSteamId
        value: "0"
      - name: MapName
        value: {{ .Vars.lua_query_map }}
      - name: ServerListName
        value: "{{ .Vars.lua_query_servername }}"
{{- end }}
{{- if .Vars.main_port_protocol }}
  - name: main
    description: Main game port. Use this port inside of your game client to connect to the server. Depending on the game you might need the query port to connect.
    protocol: {{ .Vars.main_port_protocol }}
    start_delay: {{ or .Vars.start_delay 0 }}
    finish_after_command: install
    sleep_handler: generic
    check_activity: true
{{- end }}
{{- if .Vars.rcon_port }}
  - name: rcon
    protocol: tcp
{{- end }}
{{- end }}
init: "console"
commands:
  console:
    needs: [start]
    run: restart
    procedures:
      - mode: stdin
        wait: 5
        data:
          - 'console.1'
          - "\r"
      - mode: exec-tty
        data:
          - ./{{ .Version }}
          - console
  start:
    needs: [install]
    procedures:
      - mode: exec
        ignore_failure: true
        data:
          - ./{{ .Version }}
          - update
      - mode: exec
        data:
          - ./{{ .Version }}
          - start
  stop:
    procedures:
      - mode: exec
        data:
          - ./{{ .Version }}
          - stop
  restart:
    procedures:
      - mode: exec
        data:
          - echo
          - "Restarting server..."
      - mode: exec
        data:
          - ./{{ .Version }}
          - restart
      - mode: command
        data: console
  install:
    run: once
    procedures:
      - mode: exec
        data:
          - echo
          - "Installing LGSM..."
      - mode: exec
        data:
          - sh
          - install-lgsm.sh
      - mode: exec
        data:
          - ./linuxgsm.sh
          - {{ .Version }}
      - mode: exec
        data:
          - ./{{ .Version }}
          - auto-install
{{- if eq .Vars.postinstall "enabled" }}
      - mode: exec
        data:
          - bash
          - postinstall.sh
{{- end }}
cronjobs:
  - name: Restart every 6 hours
    schedule: "0 */6 * * *"
    command: restart
{{- if eq .Vars.rcon "enabled" }}
plugins:
  rcon: {}
{{- end }}